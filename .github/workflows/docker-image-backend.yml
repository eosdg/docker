name: Docker Image Backend

on:
  push:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: eosdg/server

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: get-npm-version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@v1.3.1
      with:
        path: ./backend/source
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
            images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            flavor: |
                latest=false
            tags: |
                type=semver,pattern={{version}},value=${{steps.package-version.outputs.current-version}},enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
                type=semver,pattern={{major}}.{{minor}},value=${{steps.package-version.outputs.current-version}},enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
                type=semver,pattern={{major}}-latest,value=${{steps.package-version.outputs.current-version}},enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
                type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
            context: ./backend
            #          platforms: linux/amd64,linux/arm64
            push: true
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
            cache-from: type=gha
            cache-to: type=gha,mode=max